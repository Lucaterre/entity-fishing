Sur quoi reposent nos infrastructures numériques ?

UNE RAPIDE HISTOIRE DES LOGICIELS PUBLIQUEMENT DISPONIBLES ET DE LEURS CRÉATEURS

Bien que nous ayons utilisé « free software » pour désigner des logiciels qui ne coûtaient rien à leurs utilisateurs, il faudrait plutôt employer l'expression « logiciel libre ». Cette expression aux riches connotations fait référence en particulier aux propriétés des licences sous lesquelles les logiciels sont publiés. Les partisans du logiciel libre soulignent le fait que « free » doit être compris sous l'angle de la liberté politique et non sous celui de la gratuité. Parfois, c'est le terme espagnol « libre » qui est utilisé pour marquer cette distinction (à la diférence de « gratis », qui signiie gratuit).

Pendant les années 1970, lorsque les ordinateurs n'en étaient qu'à leurs balbutiements, les développeurs devaient construire leurs propres ordinateurs et écrire eux-mêmes des logiciels adaptés. Les logiciels n'étaient pas encore standardisés et n'étaient pas considérés comme des produits rentables.

En 1981, IBM a présenté le « IBM PC » pour « Personal Computer » 1 , qui a permis au grand public d'accéder au matériel informatique. En quelques années, les ordinateurs construits sur mesure tombèrent progressivement en déclin quand tout le monde se mit à adopter le standard IBM. IBM est ainsi devenu l'ordinateur le plus présent au sein d'un marché fortement fracturé ; en 1986, IBM avait conquis plus de la moitié du marché des ordinateurs personnels.

Avec la venue de matériel standardisé est apparue la possibilité de créer des logiciels eux-mêmes standardisés. Soudain, tout le monde avait pour objectif de créer un business autour des logiciels. IBM a engagé une société inconnue à l'époque, du nom de Microsoft, pour écrire le système d'exploitation de son nouveau PC. Ce système d'exploitation, MS-DOS, fut publié en 1981. D'autres sociétés lui emboîtèrent le pas, proposant des logiciels sous licences commerciales. Ces licences empêchaient l'utilisateur de copier, modiier ou redistribuer les logiciels.

Il existe encore aujourd'hui de nombreux logiciels propriétaires comme Adobe Photoshop, Microsoft Windows ou GoToMeeting, par exemple. Alors que ces programmes propriétaires peuvent générer du proit pour les entreprises qui créent et distribuent ces produits, leurs restrictions limitent leur portée et leur difusion. Toute modiication apportée au design ou à la conception du programme doit provenir de l'entreprise elle-même. De plus, les logiciels propriétaires sont chers, ils coûtent souvent plusieurs centaines de dollars et n'autorisent l'acheteur dûment identiié à utiliser qu'une seule et unique copie.

Naturellement, certains informaticiens se sont sentis préoccupés par la tournure fermée et propriétaire que prenaient les logiciels, estimant que cela nuisait à leur véritable potentiel. Richard Stallman, un programmeur au laboratoire d'intelligence artiicielle du MIT, a particulièrement ressenti la nécessité pour le logiciel d'être libre et modiiable.

Au cours des années qui suivirent, comme plusieurs de ses collègues se mettaient à travailler sur des projets de logiciels propriétaires, Stallman considéra qu'il ne pouvait ignorer la situation plus longtemps. En 1983, il a lancé GNU 2 , un système d'exploitation libre, et ce faisant, a déclenché ce qui est devenu le « mouvement du logiciel libre ». Ce mouvement a galvanisé un groupe de personnes qui croyaient que les logiciels pourraient avoir une plus grande portée et bénéicier à la société si ceux-ci étaient mis librement à disposition. Stallman a fondé plus tard la Free Software Foundation 3 en 1985, ain de soutenir GNU ainsi que d'autres projets de logiciels libres.

2. GNU est l'acronyme récursif de GNU's Not Unix (GNU n'est pas Unix). Pour résumer, on peut dire que GNU est la version libre du système d'exploitation UNIX (qui lui n'est pas libre). Voir le site gnu.org. 3. La Free Software Foundation (en français, la Fondation pour le logiciel libre) est une organisation à but non lucratif. Pour en savoir plus, voir l'article sur Wikipédia ou le site de la Free Software Foundation sur fsf.org.

La Free Software Foundation déinit le logiciel libre comme « un logiciel qui donne à l'utilisateur la liberté de le partager, l'étudier et le modiier ». GNU déinit quatre libertés 4 associées à de tels logiciels ;

Un programme est un logiciel libre si vous, en tant qu'utilisateur de ce programme, avez les quatre libertés essentielles :

• la liberté d'exécuter le programme comme vous voulez, pour n'importe quel usage (liberté 0) ;

L' open source revient moins cher à créer

Avant que les logiciels open source n'existent, les entreprises high-tech considéraient les programmes comme n'importe quel autre produit payant ; une équipe d'employés développait le produit en interne qui était ensuite vendu au grand public. Ce qui représentait un modèle économique très clair, mais impliquait aussi des coûts de développement accrus. Les logiciels propriétaires nécessitent une équipe payée à plein temps pour assurer le développement, ce qui inclut des développeurs, des designers, des commerciaux et des juristes. Il est bien moins coûteux de simplement conier le développement à une communauté de développeurs bénévoles qui conçoivent et assurent la maintenance du produit.

L' open source est plus facile à difuser

On a plus envie d'adopter un logiciel dont l'usage est gratuit et de le modiier, plutôt qu'un logiciel dont la licence coûte des centaines de dollars et qui a été développé dans une boîte noire. Non seulement les développeurs vont vouloir l'utiliser sans frais, mais ils pourraient même inciter leurs amis à l'utiliser eux aussi, ce qui va ampliier sa difusion.

L' open source est plus ouvert à la personnalisation

Les logiciels open source sont copiables et adaptables aux besoins de chacun, avec diférents degrés de permission. Si un développeur veut améliorer un logiciel existant, il ou elle peut copier le projet et le modiier (une pratique appelée « forker » en franglais).

Beaucoup de projets à succès ont commencé comme une modification de logiciels existants, par exemple WordPress (gestionnaire de contenu utilisé par 23 % des sites web dans le monde), PostgreSQL (l'une des bases de données parmi les plus populaires et dont l'adoption est croissante dans le monde entier), Ubuntu (un système d'exploitation) et Firefox (un des navigateurs web parmi les plus populaires). Dans le cas de WordPress, le logiciel a été forké depuis un projet existant appelé b2 (aussi connu sous le nom de cafelog). Deux développeurs, Matt Mullenweg et Mike Little, ont décidé qu'ils souhaitaient une meilleure version de b2 et ont donc forké le projet.

Mullenberg a choisi de copier b2, plutôt qu'un autre projet appelé TextPattern, car les licences b2 étaient plus permissives. Son idée d'origine, de 2003, est décrite ci-dessous ;

Que faire ? Bon, TextPattern ressemble à tout ce que je rêve d'avoir, mais ça n'a pas l'air d'être sous une licence suffisamment en accord avec mes principes. Heureusement, b2/cafelog est sous GPL GNU General Public Licence, une licence de logiciel libre, ce qui veut dire que je peux utiliser les lignes de code existantes pour créer un forkCe travail ne sera jamais perdu, car si je disparais de la surface de la Terre dans un an, le code que j'aurai écrit sera entièrement accessible à tous ; et si quelqu'un d'autre veut poursuivre le travail, libre à lui.

Si le logiciel était développé dans un environnement fermé et propriétaire, les développeurs n'auraient aucune possibilité de le modiier, à moins de travailler dans l'entreprise propriétaire. S'ils essayaient de réaliser leur propre version qui imite l'original, ils s'exposeraient à des poursuites en lien avec la propriété intellectuelle. Avec les logiciels open source, le développeur peut simplement modiier le logiciel lui-même et le distribuer publiquement, comme l'a fait Mullenweg. Les logiciels open source permettent ainsi une prolifération rapide des idées.

L' open source facilite l'adaptation des employés

Il faut du temps pour étudier une ressource logicielle, qu'il s'agisse d'un nouveau langage de programmation ou d'un nouveau framework. Si toutes les entreprises utilisaient leurs propres outils propriétaires, les développeurs auraient moins envie de changer d'entreprise, parce que leurs compétences techniques ne seraient applicables que sur leur lieu de travail actuel.

Il leur faudrait encore une fois apprendre à utiliser les outils propres à leur nouveau lieu de travail.

Quand les entreprises utilisent la technologie open source, un développeur détient un ensemble de compétences réutilisables, ce qui lui donne plus de liberté pour travailler là où il le souhaite. Par exemple, de nombreuses entreprises utilisent le même langage de programmation Ruby pour leurs logiciels. De plus, si leur produit lui-même est open source, la production appartient autant au développeur qu'à l'entreprise. Ce dernier peut emporter son travail avec lui s'il décide de la quitter (alors qu'il pourrait par exemple être au contraire limité par une clause de conidentialité si le code était propriétaire).

Tous ces bénéfices offrent plus de moyens d'action aux employés que si ces derniers avaient eu afaire à un logiciel propriétaire. De nos jours, de nombreuses entreprises mettent en avant leur utilisation de logiciels open source comme tactique de recrutement, parce que cette utilisation favorise le développeur.